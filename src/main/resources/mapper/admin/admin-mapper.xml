<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">

<select id="selectMemberList" resultMap="memberMap">
	select
	    *
	from
	    member m left join authorities a
	        on m.id = a.member_id
	order by
		reg_date desc
</select>

	<resultMap type="member" id="memberMap">
		<id column="id" property="id"/>
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<result column="gender" property="gender" />
		<result column="email" property="email" />
		<result column="birthday" property="birthday" />
		<result column="address" property="address" />
		<result column="nickname" property="nickname" />
		<result column="reg_date" property="regDate" />
		<result column="point" property="point" />
		<result column="enabled" property="enabled" />
		
		<collection 
			property="authorities" 
			ofType="org.springframework.security.core.authority.SimpleGrantedAuthority">
			<constructor>	
				<arg column="authority" javaType="string"/>
			</constructor>		
		</collection>
 	</resultMap>
 	
	<select id="selectMemberTotalCount" resultType="_int">
		select 
			count(*) 
		from 
			member
	</select>
	
<select id="selectGoodsList" resultType="goods">
	select
		*
	from
		goods
	order by
		p_enroll desc
</select>

	<insert id="insertGoods" parameterType="goods">
		insert into
			goods
		values(
			seq_goods_id.nextval,
			#{pName},
			#{pPrice},
			#{pInfo},
			#{pImg},
			#{pCategory},
			default
		)
		
		<selectKey keyProperty="pId" resultType="_int" order="AFTER">
			select 
				seq_goods_id.currval
			from 
				dual
		</selectKey>
	</insert>
	
	<insert id="insertAttachment">
		insert into
			attachment(attach_no, original_filename, renamed_filename)
		values(
			seq_attachment_no.nextval,
			#{originalFilename},
			#{renamedFilename}
		)		
	</insert>
	
	<delete id="deleteGoods">
		delete from
			goods
		where
			p_id = #{pId}
	</delete>
	
	<select id="selectOneGoods" resultType="goods">
		select
			*
		from
			goods
		where
			p_id = #{pId}
	</select>
	
	<update id="updateGoods">
		update
			goods
		set 
			p_name = #{pName}, p_price = #{pPrice}, p_info = #{pInfo}, p_img = #{pImg}, p_category = #{pCategory}
		where
			p_id = #{pId}
	</update>
	
	<select id="selectRecentTenGoodsList" resultType="goods">
		select 
			* 
		from 
			goods 
			<![CDATA[where rownum <= 10]]>
		order by 
			p_enroll desc
	</select>
	
	<select id="selectOneMember" resultType="member">
		select
			*
		from
			member
		where
			id = #{id}
	</select>
	
	<select id="selectMemberPointHistoryList" resultType="pointHistory">
		select
			*
		from
			point_history
		where
			member_id = #{id}
	</select>
	
	<update id="updateMember">
		update
			member
		set
			nickname=#{nickname}, phone=#{phone}, email=#{email}, address=#{address}
		where
			id = #{id}
	</update>
	
	<select id="searchMember" resultType="member">
			select 
				*
			from (
				select 
					row_number() over(order by reg_date desc) rnum, 
					m.* 
				from 
					member m)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('id')">
				where 
					id like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('name')">
				where 
					name like #{searchKeyword}
			</when>
			</choose>
	</select>
	
<!-- 	<resultMap type="member" id="searchMemberMap"> -->
<!-- 		<id column="rnum" property="rnum"/> -->
<!-- 		<result column="id" property="id"/> -->
<!-- 		<result column="password" property="password"/> -->
<!-- 		<result column="name" property="name"/> -->
<!-- 		<result column="phone" property="phone"/> -->
<!-- 		<result column="email" property="email"/> -->
<!-- 		<result column="birthday" property="birthday"/> -->
<!-- 		<result column="address" property="address"/> -->
<!-- 		<result column="nickname" property="nickname"/> -->
<!-- 		<result column="reg_date" property="regDate"/> -->
<!-- 		<result column="point" property="point"/> -->
<!-- 		<result column="enabled" property="enabled"/> -->
<!-- 	</resultMap> -->

	<select id="searchMemberCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('id')">
			select 
				count(*) 
			from 
				member 
			where 
				id like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('name')">
			select 
				count(*) 
			from 
				member 
			where 
				name like #{searchKeyword}
		</if>
	</select>
	
	<select id="searchGoods" resultType="goods">
			select 
				*
			from (
				select 
					row_number() over(order by p_enroll desc) rnum, 
					g.* 
				from 
					goods g)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('pId')">
				where 
					p_id like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('pName')">
				where 
					p_name like #{searchKeyword}
			</when>
			</choose>
	</select>
	
	<select id="searchGoodsCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('pId')">
			select 
				count(*) 
			from 
				goods
			where 
				p_id like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('pName')">
			select 
				count(*) 
			from 
				goods 
			where 
				p_name like #{searchKeyword}
		</if>
	</select>
	
	<insert id="insertPointHistory">
		insert into
			point_history
		values (seq_history_no.nextval, #{id}, #{reason}, #{change}, #{point}, default)
	</insert>
	
	<update id="updateMemberPoint" parameterType="hashmap">
		update 
			member
		set
			point = #{point}
		where
			id = #{id}
	</update>
	
	<select id="searchMovieList" resultType="movie">
		select
			*
		from
			movie
	</select>
	
	<select id="selectOneMovie" resultType="movie">
		select
			*
		from
			movie
		where
			movie_id = #{movieId}
	</select>
	
	<select id="selectTheaterList" resultType="theater">
		select
			*
		from
			theater
	</select>
	
	<select id="selectOneTheater" resultMap="movieJoinMap">
		select distinct
			s.seat_no, s.is_booked
		from
			movie_schedule c
			left join theater t
			on c.theater_id = t.theater_id
			left join seat s
			on c.movie_schedule_id = s.movie_schedule_id
		where 
			t.theater_id = #{theaterId} and not s.seat_no is null
		order by s.seat_no asc
	</select>
	
	<resultMap type="movie" id="movieMap">
		<id column="movie_id" property="movieId"/>
		<result column="title_kor" property="titleKor"/>
		<result column="title_eng" property="titleEng"/>
		<result column="description" property="description"/>
		<result column="opening_date" property="openingDate"/>
		<result column="director" property="director"/>
		<result column="actors" property="actors"/>
		<result column="genre" property="genre"/>
		<result column="running_time" property="runningTime"/>
		<result column="age_limit" property="ageLimit"/>
		<result column="imgage" property="image"/>
	</resultMap>

	<resultMap type="movieSchedule" id="movieScheduleMap">
		<id column="movie_schedule_id" property="movieScheduleId"/>
		<result column="theater_id" property="theaterId"/>
		<result column="movie_id" property="movieId"/>
		<result column="start_date" property="startDate"/>
		<result column="start_time" property="startTime"/>
	</resultMap>

	<resultMap type="theater" id="theaterMap">
		<id column="theater_id" property="theaterId"/>
		<result column="max_seat" property="maxSeat"/>
	</resultMap>
	
	<resultMap type="seat" id="seatMap">
		<id column="seat_no" property="seatNo"/>
		<result column="movie_schedule_id" property="movieScheduleId"/>
		<result column="is_booked" property="isBooked"/>
	</resultMap>
	
	<resultMap type="movieJoin" id="movieJoinMap">
		<collection property="movie" resultMap="movieMap" />
		<collection property="movieSchedule" resultMap="movieScheduleMap" />
		<collection property="theater" resultMap="theaterMap" />
		<collection property="seat" resultMap="seatMap" />
	</resultMap>
	
</mapper>