<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">

<select id="selectMemberList" resultMap="memberMap">
	select
	    *
	from
	    member m left join authorities a
	        on m.id = a.member_id
	order by
		reg_date desc
</select>

	<resultMap type="member" id="memberMap">
		<id column="id" property="id"/>
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<result column="gender" property="gender" />
		<result column="email" property="email" />
		<result column="birthday" property="birthday" />
		<result column="address" property="address" />
		<result column="nickname" property="nickname" />
		<result column="reg_date" property="regDate" />
		<result column="point" property="point" />
		<result column="enabled" property="enabled" />
		<result column="image" property="image" />
		<collection 
			property="authorities" 
			ofType="org.springframework.security.core.authority.SimpleGrantedAuthority">
			<constructor>	
				<arg column="authority" javaType="string"/>
			</constructor>		
		</collection>
 	</resultMap>
 	
	<select id="selectMemberTotalCount" resultType="_int">
		select 
			count(*) 
		from 
			member
	</select>
	
<select id="selectGoodsList" resultType="goods">
	select
		*
	from
		goods
	order by
		p_enroll desc
</select>

	<insert id="insertGoods" parameterType="goods">
		insert into
			goods
		values(
			seq_goods_id.nextval,
			#{pName},
			#{pPrice},
			#{pInfo},
			#{pImg},
			#{pCategory},
			default,
			#{pSubcategory}
		)
		
		<selectKey keyProperty="pId" resultType="_int" order="AFTER">
			select 
				seq_goods_id.currval
			from 
				dual
		</selectKey>
	</insert>
	
	<insert id="insertAttachment">
		insert into
			attachment(attach_no, notice_no, original_filename, renamed_filename)
		values(
			seq_attachment_no.nextval,
			#{noticeNo},
			#{originalFilename},
			#{renamedFilename}
		)		
	</insert>

	<insert id="insertGoodsAttachment">
		insert into
			attachment(attach_no, original_filename, renamed_filename)
		values(
			seq_attachment_no.nextval,
			#{originalFilename},
			#{renamedFilename}
		)		
	</insert>
	
	<delete id="deleteGoods">
		delete from
			goods
		where
			p_id = #{pId}
	</delete>
	
	<select id="selectOneGoods" resultType="goods">
		select
			*
		from
			goods
		where
			p_id = #{pId}
	</select>
	
	<update id="updateGoods">
		update
			goods
		set 
			p_name = #{pName}, p_price = #{pPrice}, p_info = #{pInfo}, p_img = #{pImg}, p_category = #{pCategory}
		where
			p_id = #{pId}
	</update>
	
	<select id="selectOneMember" resultType="member">
		select
			*
		from
			member
		where
			id = #{id}
	</select>
	
	<select id="selectMemberPointHistoryList" resultType="pointHistory">
		select
			*
		from
			point_history
		where
			member_id = #{id}
		order by 
			reg_date desc
	</select>
	
	<update id="updateMember">
		update
			member
		set
			nickname=#{nickname}, phone=#{phone}, email=#{email}, address=#{address}
		where
			id = #{id}
	</update>
	
	<select id="searchMember" resultType="member">
			select 
				*
			from (
				select 
					row_number() over(order by reg_date desc) rnum, 
					m.* 
				from 
					member m)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('id')">
				where 
					id like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('name')">
				where 
					name like #{searchKeyword}
			</when>
			</choose>
	</select>

	<select id="searchMemberCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('id')">
			select 
				count(*) 
			from 
				member 
			where 
				id like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('name')">
			select 
				count(*) 
			from 
				member 
			where 
				name like #{searchKeyword}
		</if>
	</select>
	
	<select id="searchGoods" resultType="goods">
			select 
				*
			from (
				select 
					row_number() over(order by p_enroll desc) rnum, 
					g.* 
				from 
					goods g)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('pId')">
				where 
					p_id like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('pName')">
				where 
					p_name like #{searchKeyword}
			</when>
			</choose>
	</select>
	
	<select id="searchGoodsCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('pId')">
			select 
				count(*) 
			from 
				goods
			where 
				p_id like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('pName')">
			select 
				count(*) 
			from 
				goods 
			where 
				p_name like #{searchKeyword}
		</if>
	</select>
	
	<insert id="insertPointHistory">
		insert into
			point_history
		values (seq_history_no.nextval, #{id}, #{reason}, #{change}, #{point}, default)
	</insert>
	
	<update id="updateMemberPoint" parameterType="hashmap">
		update 
			member
		set
			point = #{point}
		where
			id = #{id}
	</update>
	
	<select id="searchMovieList" resultType="movie">
		select
			*
		from
			movie
	</select>
	
	<select id="selectOneMovie" resultType="movie">
		select
			*
		from
			movie
		where
			movie_id = #{movieId}
	</select>
	
	<select id="selectTheaterList" resultType="theater">
		select
			*
		from
			theater
	</select>
	
	<select id="selectOneTheater" resultMap="movieJoinMap">
		select distinct
			s.seat_no, s.is_booked
		from
			movie_schedule c
			left join theater t
			on c.theater_id = t.theater_id
			left join seat s
			on c.movie_schedule_id = s.movie_schedule_id
		where 
			t.theater_id = #{theaterId} and not s.seat_no is null
		order by s.seat_no asc
	</select>
	
	<resultMap type="movie" id="movieMap">
		<id column="movie_id" property="movieId"/>
		<result column="title_kor" property="titleKor"/>
		<result column="title_eng" property="titleEng"/>
		<result column="description" property="description"/>
		<result column="opening_date" property="openingDate"/>
		<result column="director" property="director"/>
		<result column="actors" property="actors"/>
		<result column="genre" property="genre"/>
		<result column="running_time" property="runningTime"/>
		<result column="age_limit" property="ageLimit"/>
		<result column="imgage" property="image"/>
	</resultMap>

	<resultMap type="movieSchedule" id="movieScheduleMap">
		<id column="movie_schedule_id" property="movieScheduleId"/>
		<result column="theater_id" property="theaterId"/>
		<result column="movie_id" property="movieId"/>
		<result column="start_date" property="startDate"/>
		<result column="start_time" property="startTime"/>
	</resultMap>

	<resultMap type="theater" id="theaterMap">
		<id column="theater_id" property="theaterId"/>
		<result column="max_seat" property="maxSeat"/>
	</resultMap>
	
	<resultMap type="seat" id="seatMap">
		<id column="seat_no" property="seatNo"/>
		<result column="movie_schedule_id" property="movieScheduleId"/>
		<result column="is_booked" property="isBooked"/>
	</resultMap>
	
	<resultMap type="movieJoin" id="movieJoinMap">
		<collection property="movie" resultMap="movieMap" />
		<collection property="movieSchedule" resultMap="movieScheduleMap" />
		<collection property="theater" resultMap="theaterMap" />
		<collection property="seat" resultMap="seatMap" />
	</resultMap>
	
	<select id="adminOneMovieSchedule" resultMap="movieJoinMap">
		select
		   *
		from
		    movie m
		left join movie_schedule s
		on m.movie_id = s.movie_id
		where 
			m.movie_id = #{movieId}
	</select>
	
	<select id="adminOneMovieScheduleDate" resultMap="movieJoinMap">
		select
		   *
		from
		    movie m
		left join movie_schedule s
		on m.movie_id = s.movie_id
		where 
			s.start_date = #{startDate} and m.movie_id = #{movieId}
	</select>
	
	<select id="adminSelectNoticeList" resultType="notice">
		select 
        	n.*,
        	(select count(*) from attachment where attach_no = n.notice_no) attach_count
		from 
			notice_board n
		order by 
			notice_no desc
	</select>
	
	<select id="countTotalNoticeContent" resultType="_int">
		select 
			count(*)
		from 
			notice_board
	</select>
	
	<insert id="insertNotice" parameterType="notice">
		insert into 
			notice_board(notice_no, notice_title, notice_content, member_id)
		values (
			seq_notice_no.nextval,
			#{noticeTitle},
			#{noticeContent},
			#{memberId}
		)
		
		<selectKey keyProperty="noticeNo" resultType="_int" order="AFTER">
			select 
				seq_notice_no.currval
			from 
				dual
		</selectKey>
	</insert>
	
	<select id="selectOneNoticeCollection" resultMap="noticeCollectionMap">
		select
			b.*,
			a.*,
			a.attach_no attach_no
		from 
		notice_board b left join attachment a
				on b.notice_no = a.notice_no
		where 
			b.notice_no = #{no}
		order by 
			b.notice_no desc
	</select>
	
	<resultMap type="notice" id="noticeCollectionMap">
		<id column="notice_no" property="noticeNo"/>
		<result column="notice_title" property="noticeTitle"/>
		<result column="notice_content" property="noticeContent"/>
		<result column="reg_date" property="regDate"/>
		<result column="read_count" property="readCount"/>
		
		<collection property="attachments" ofType="attachment">
			<id column="attach_no" property="attachNo"/>
			<result column="notice_no" property="noticeNo"/>
			<result column="original_filename" property="originalFilename"/>
			<result column="renamed_filename" property="renamedFilename"/>
			<result column="reg_date" property="regDate"/>
		</collection>
		
	</resultMap>
	
	<select id="selectOneAttachment" resultType="attachment">
		select 
			*
		from 
			attachment
		where 
			attach_no = #{no}
	</select>
	
	<select id="selectNoticeOneloginMember" resultType="string">
		select 
			authority
		from 
			notice_board a left join authorities b
            on a.member_id = b.member_id
        where 
        	a.notice_no = #{noticeNo}
	</select>
	
	<select id="selectOneGoodsDetail" resultMap="goodsJoinMap">
		select
			*
		from
			goods_option o
		left join goods g
		on o.p_id = g.p_id
		left join option_detail d
		on o.option_id = d.option_id
		where 
			g.p_id = #{pId}
	</select>
	
	<resultMap type="goods" id="goodsMap">
        <id column="p_id" property="pId"/>
        <result column="p_name" property="pName"/>
        <result column="p_price" property="pPrice"/>
        <result column="p_info" property="pInfo"/>
        <result column="p_img" property="pImg"/>
        <result column="p_category" property="pCategory"/>
        <result column="p_enroll" property="pEnroll"/>
        <result column="p_subcategory" property="pSubcategory"/>
    </resultMap>

	<resultMap type="goodsOption" id="goodsOptionMap">
		<id column="p_id" property="pId"/>
		<result column="option_id" property="optionId"/>
	</resultMap>
	
	<resultMap type="optionDetail" id="optionDetailMap">
		<id column="option_id" property="optionId"/>
		<result column="option_type" property="optionType"/>
		<result column="option_color" property="optionColor"/>
		<result column="option_size" property="optionSize"/>
		<result column="option_stock" property="optionStock"/>
		<result column="option_img" property="optionImg"/>
		<result column="option_rgb" property="optionRgb"/>
	</resultMap>
	
	<resultMap type="orderDetail" id="orderDetailMap">
		<id column="order_detail_no" property="orderDetailNo"/>
		<result column="order_no" property="orderNo"/>
		<result column="p_id" property="pId"/>
		<result column="option_id" property="optionId"/>
		<result column="quantity" property="quantity"/>
	</resultMap>
	
	<resultMap type="payment" id="paymentMap">
		<id column="payment_no" property="paymentNo"/>
		<result column="order_no" property="orderNo"/>
		<result column="member_id" property="memberId"/>
		<result column="receiver" property="receiver"/>
		<result column="address" property="address"/>
		<result column="phone" property="phone"/>
		<result column="order_comment" property="orderComment"/>
		<result column="total_price" property="totalPrice"/>
		<result column="payment_date" property="paymentDate"/>
	</resultMap>
	
	<resultMap type="goodsJoin" id="goodsJoinMap">
		<collection property="goods" resultMap="goodsMap" />
		<collection property="goodsOption" resultMap="goodsOptionMap" />
		<collection property="optionDetail" resultMap="optionDetailMap" />
	</resultMap>
	
	<select id="selectOneGoodsOption" resultType="optionDetail">
		select
			*
		from
			option_detail
		where
			option_id = #{optionId}
	</select>
	
	<update id="updateGoodsOption">
		update
			option_detail
		set
			option_type = #{optionType}, option_color = #{optionColor}, option_size = #{optionSize}, option_stock = #{optionStock}, option_img = #{optionImg}, option_rgb = #{optionRgb}
		where option_id = #{optionId}
	</update>
	
	<insert id="insertOptionDetail">
		insert into
			option_detail
		values (#{optionId}, #{optionDetail.optionType}, #{optionDetail.optionColor}, #{optionDetail.optionSize}, #{optionDetail.optionStock}, #{optionDetail.optionImg}, #{optionDetail.optionRgb})
	</insert>
	
	<select id="selectOptionId" resultType="int">
		select 
			seq_option_detail_id.nextval 
		from 
			dual
	</select>

	<insert id="insertGoodsOption">
			insert into 
				goods_option
			values(#{pId}, #{optionId})
	</insert>
	
	<delete id="deleteGoodsOption">
		delete from
			option_detail
		where
			option_id = #{optionId}
	</delete>
	
	<update id="updateNotice">
		update 
			notice_board
		set
			notice_title = #{noticeTitle},
			notice_content = #{noticeContent}
		where 
			notice_no = #{noticeNo}
	</update>
	
	<delete id="deleteNoticeAttachment">
		delete from 
			attachment
		where 
			attach_no = #{attachNo}
	</delete>
	
	<delete id="deleteNotice">
		delete from 
			notice_board
		where 
			notice_no = #{noticeNo}
	</delete>
	
	<select id="selectAttachmentByNoticeNo" resultType="attachment">
		select 
			*
		from 
			attachment 
		where 
			notice_no = #{noticeNo}
	</select>
	
	<select id="adminManageRegisterAweekAgoCount" resultType="_int">
		select 
			count(*) 
		from 
			member 
		where 
			<![CDATA[to_char(reg_date, 'YYYYMMDD') >= to_char(sysdate-7,'YYYYMMDD')]]>
	</select>
	
	<select id="adminManageTodayScreeningCount" resultType="_int">
		select 
			count(*) 
		from 
			movie_schedule 
		where 
			<![CDATA[to_date(start_date, 'YYYY-MM-DD') = to_date(sysdate,'YYYY-MM-DD')]]>
	</select>
	
	<select id="adminManageRecentTenReviewList" resultMap="reviewMap"> 
		select
			m.image, r.member_id, r.reg_date, r.review_title
		from
			member m 
		left join review_board r
		on m.id = r.member_id
		where 
			<![CDATA[rownum <= 10 and r.reg_date is not null]]>
		order by 
			r.reg_date desc
	</select>
	
	<resultMap type="review" id="reviewMap">
		<id column="review_no" property="reviewNo"/>
		<result column="member_id" property="memberId"/>
		<result column="review_title" property="reviewTitle"/>
		<result column="review_content" property="reviewContent"/>
		<result column="reg_date" property="regDate"/>
		<result column="read_count" property="readCount"/>
		<result column="recommend" property="recommend"/>
		<result column="attach_count" property="attachCount"/>
		<result column="rc_count" property="reviewCommentCount"/>
		<association property="member" javaType="member">
			<id column="id" property="id"/>
			<result column="nickname" property="nickname"/>
			<result column="image" property="image"/>
		</association>	
	</resultMap>
	
	
	<select id="adminSelectQuestionList" resultType="question">
		select
			b.*,
			(select count(*) from attachment where question_no = b.question_no) attach_count
		from 
			question_board b left join member a
                    on b.member_id = a.id
		order by 
			question_no desc
	</select>
	
	<select id="countTotalQuestionContent" resultType="_int">
		select 
			count(*)
		from 
			question_board a left join member b
		        on a.member_id = b.id
	</select>
	
	<select id="selectQuestionCollection" resultMap="questionCollectionMap">
		select 
			b.*,
			a.*,
			a.attach_no attach_no
		from 
			question_board b left join attachment a
				on b.question_no = a.question_no
		where 
			b.question_no = #{questionNo}
		order by 
			b.question_no desc
	</select>
	
	<resultMap type="question" id="questionCollectionMap">
		<id column="question_no" property="questionNo"/>
		<result column="member_id" property="memberId"/>
		<result column="question_title" property="questionTitle"/>
		<result column="question_content" property="questionContent"/>
		<result column="reg_date" property="regDate"/>
		
		<collection property="attachments" ofType="attachment">
			<id column="attach_no" property="attachNo"/>
			<result column="question_no" property="questionNo"/>
			<result column="original_filename" property="originalFilename"/>
			<result column="renamed_filename" property="renamedFilename"/>
			<result column="reg_date" property="regDate"/>
		</collection>
	</resultMap>
	
	<select id="selectQuestionComment" resultType="QuestionComment">
		select 
			*
		from 
			question_comment
		where 
			question_no = #{questionNo}
	</select>
	
	<insert id="insertQuestionComment">
		insert into 
			question_comment(no, question_no, writer, content, reg_date)
		values (
			default,
			#{questionNo},
			#{writer},
			#{content},
			default
		)
	</insert>
	
	<update id="updateQuestionAnswer">
		update 
			question_board
		set 
			answer = 'Y'
		where 
			question_no = #{questionNo}
	</update>
	
	<delete id="deleteQuestionComment">
		delete from 
			question_comment
		where 
			no = #{commentNo}
	</delete>
	
	<update id="updateQuestionAnswerToN">
		update 
			question_board
		set
			answer = default
		where 
			question_no = #{questionNo}
	</update>
	
	<select id="adminManageTodayReviewCount" resultType="_int">
		select 
			count(*) 
		from 
			review_board 
		where 
			to_date(reg_date, 'YYYY-MM-DD') = to_date(sysdate,'YYYY-MM-DD')
	</select>

	<select id="adminManageTodayQuestionCount" resultType="_int">
		select 
			count(*) 
		from 
			question_board 
		where 
			to_date(reg_date, 'YYYY-MM-DD') = to_date(sysdate,'YYYY-MM-DD')
	</select>
	
	<insert id="insertSaveNotify">
		insert into
			save_notify
		values(#{target}, #{content}, #{type}, #{url})
	</insert>
	
	<select id="searchQuestion" resultType="question">
			select 
				*
			from (
				select 
					row_number() over(order by reg_date desc) rnum, 
					q.* 
				from 
					question_board q)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('questionNo')">
				where 
					question_no like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('questionTitle')">
				where 
					question_title like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
				where 
					member_id like #{searchKeyword}
			</when>
			</choose>
	</select>

	<select id="searchQuestionCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('questionNo')">
			select 
				count(*) 
			from 
				question_board
			where 
				question_no like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('questionTitle')">
			select 
				count(*) 
			from 
				question_board
			where 
				question_title like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
			select 
				count(*) 
			from 
				question_board
			where 
				member_id like #{searchKeyword}
		</if>
	</select>
	
	<select id="searchNotice" resultType="notice">
			select 
				*
			from (
				select 
					row_number() over(order by reg_date desc) rnum, 
					n.* 
				from 
					notice_board n)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('noticeNo')">
				where 
					notice_no like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('noticeTitle')">
				where 
					notice_title like #{searchKeyword}
			</when>
			</choose>
	</select>

	<select id="searchNoticeCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('noticeNo')">
			select 
				count(*) 
			from 
				notice_board
			where 
				notice_no like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('noticeTitle')">
			select 
				count(*) 
			from 
				notice_board
			where 
				notice_title like #{searchKeyword}
		</if>
	</select>
	
	<insert id="insertRouletteEvent">
		insert into
			roulette_event
		values (#{id}, #{oldChange}, default)
	</insert>
	
	<select id="selectRouletteEvent" resultType="rouletteEvent">
		select
			*
		from
			roulette_event
		where
			member_id = #{memberId}
	</select>
	
	<select id="selectRouletteEventParticipateCnt" resultType="_int"> 
		select 
			count(*) 
		from 
			roulette_event 
		where member_id = #{id}
	</select>
	
	<update id="updateRouletteEvent">
		update 
			roulette_event
		set 
			point = #{oldChange}, participate_date = default 	
		where 
			member_id = #{id}
	</update>
	
	<select id="adminSelectNewQuestion" resultType="question">
		select
			b.*,
			(select count(*) from attachment where question_no = b.question_no) attach_count
		from 
			question_board b left join member a
                    on b.member_id = a.id
        where 
        	answer = 'N'
		order by 
			question_no desc
	</select>
	
		<select id="countTotalNewQuestionContent" resultType="_int">
		select 
			count(*)
		from 
			question_board a left join member b
		        on a.member_id = b.id
		where 
			answer = 'N'
	</select>
	
		<select id="searchNewQuestion" resultType="question">
			select 
				*
			from (
				select 
					row_number() over(order by reg_date desc) rnum, 
					q.* 
				from 
					question_board q)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('questionNo')">
				where 
					answer = 'N' and question_no like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('questionTitle')">
				where 
					answer = 'N' and question_title like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
				where 
					answer = 'N' and member_id like #{searchKeyword}
			</when>
			</choose>
	</select>

	<select id="searchNewQuestionCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('questionNo')">
			select 
				count(*) 
			from 
				question_board
			where 
				answer = 'N' and question_no like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('questionTitle')">
			select 
				count(*) 
			from 
				question_board
			where 
				answer = 'N' and question_title like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
			select 
				count(*) 
			from 
				question_board
			where 
				answer = 'N' and member_id like #{searchKeyword}
		</if>
	</select>
	
	<select id="adminManageRecentTenQuestionList" resultMap="questionMap">
		select
			m.image, q.member_id, q.question_title, q.reg_date
		from
			member m 
		left join question_board q
		on m.id = q.member_id
		where 
			<![CDATA[rownum <= 10 and q.reg_date is not null]]>
		order by 
			q.reg_date desc
	</select>
	
	<resultMap type="question" id="questionMap">
		<id column="question_no" property="questionNo"/>
		<result column="member_id" property="memberId"/>
		<result column="question_title" property="questionTitle"/>
		<result column="question_content" property="questionContent"/>
		<result column="reg_date" property="regDate"/>
		<result column="answer" property="answer"/>
		<association property="member" javaType="member">
			<id column="id" property="id"/>
			<result column="name" property="name"/>
			<result column="phone" property="phone"/>
			<result column="email" property="email"/>
			<result column="birthday" property="birthday"/>
			<result column="address" property="address"/>
			<result column="nickname" property="nickname"/>
			<result column="image" property="image"/>
		</association>	
	</resultMap>
	
	<select id="adminSelectReviewList" resultType="review">
		select 
        	r.*,
        	(select count(*) from attachment where attach_no = r.review_no) attach_count
		from 
			review_board r
		order by 
			review_no desc
	</select>
	
	<select id="countTotalReviewContent" resultType="_int">
		select 
			count(*)
		from 
			review_board
	</select>
	
		<resultMap type="review" id="reviewCollectionMap">
		<id column="review_no" property="reviewNo"/>
		<result column="member_id" property="memberId"/>
		<result column="review_title" property="reviewTitle"/>
		<result column="review_content" property="reviewContent"/>
		<result column="reg_date" property="regDate"/>
		<result column="rc_count" property="reviewCommentCount"/>
		<result column="read_count" property="readCount"/>
		<result column="recommend" property="recommend"/>
		<association property="member" javaType="member">
			<id column="id" property="id"/>
			<result column="name" property="name"/>
			<result column="phone" property="phone"/>
			<result column="email" property="email"/>
			<result column="birthday" property="birthday"/>
			<result column="address" property="address"/>
			<result column="nickname" property="nickname"/>
			<result column="image" property="image"/>
		</association>	
		<collection property="attachments" ofType="attachment">
			<id column="attach_no" property="attachNo" />
			<result column="review_no" property="reviewNo" />
			<result column="renamed_filename" property="renamedFilename" />
			<result column="original_filename" property="originalFilename" />
			<result column="reg_date" property="regDate" />
		</collection>
	</resultMap>
	
	<select id="selectOneReviewCollection" resultMap="reviewCollectionMap">
		select
			r.*,
			a.*,
			a.attach_no attach_no
		from 
			review_board r left join attachment a
				on r.review_no = a.review_no
		where 
			r.review_no = #{reviewNo}
		order by 
			r.review_no desc
	</select>
	
	<select id="selectReviewOneloginMember" resultType="string">
		select 
			authority
		from 
			review_board r left join authorities a
            on r.member_id = a.member_id
        where 
        	r.review_no = #{reviewNo}
	</select>
	
	<delete id="deleteReview">
		delete from 
			review_board
		where 
			review_no = #{reviewNo}
	</delete>
	
	<select id="selectAttachmentByReviewNo" resultType="attachment">
		select 
			*
		from 
			attachment 
		where 
			review_no = #{reviewNo}
	</select>
	
	<delete id="deleteReviewLike">
		delete from
			review_like
		where
			review_no = #{reviewNo}
	</delete>
	
	<delete id="deleteReviewComment">
		delete from 
			review_comment
		where
			review_no = #{reviewNo}
	</delete>
	
	<select id="adminSelectSharingList" resultType="board">
		select 
        	t.*,
        	(select count(*) from attachment where attach_no = t.no) attach_count
		from 
			ticket_sharing_board t
		order by 
			no desc
	</select>
	
	<select id="countTotalSharingContent" resultType="_int">
		select 
			count(*)
		from 
			ticket_sharing_board
	</select>
	
	<resultMap type="board" id="sharingCollectionMap">
		<id column="no" property="no"/>
		<result column="member_id" property="memberId"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="reg_date" property="regDate"/>
<!-- 		<result column="rc_count" property="reviewCommentCount"/> -->
		<result column="read_count" property="readCount"/>
		<result column="category" property="category"/>
		<association property="member" javaType="member">
			<id column="id" property="id"/>
			<result column="name" property="name"/>
			<result column="phone" property="phone"/>
			<result column="email" property="email"/>
			<result column="birthday" property="birthday"/>
			<result column="address" property="address"/>
			<result column="nickname" property="nickname"/>
			<result column="image" property="image"/>
		</association>
		<collection property="attachments" ofType="attachment">
			<id column="attach_no" property="attachNo" />
			<result column="market_no" property="marketNo" />
			<result column="renamed_filename" property="renamedFilename" />
			<result column="original_filename" property="originalFilename" />
			<result column="reg_date" property="regDate" />
		</collection>
	</resultMap>
	
	<select id="selectOneSharingCollection" resultMap="sharingCollectionMap">
		select
			t.*,
			a.*,
			a.attach_no attach_no
		from 
			ticket_sharing_board t left join attachment a
				on t.no = a.market_no
		where 
			t.no = #{no}
		order by 
			t.no desc
	</select>
	
	<select id="selectSharingOneloginMember" resultType="string">
		select 
			authority
		from 
			ticket_sharing_board t left join authorities a
            on t.member_id = a.member_id
        where 
        	t.no = #{no}
	</select>
	
	<delete id="deleteSharing">
		delete from 
			ticket_sharing_board
		where 
			no = #{no}
	</delete>
	
	<select id="selectAttachmentBySharingNo" resultType="attachment">
		select 
			*
		from 
			attachment 
		where 
			market_no = #{no}
	</select>
	
	<update id="adminMemberCut">
		update 
			member
		set 
			enabled = 0
		where
			id = #{id}
	</update>
	
	<update id="adminMemberUnblock">
		update 
			member
		set 
			enabled = 1
		where
			id = #{id}
	</update>
	
	<select id="searchReview" resultType="review">
			select 
				*
			from (
				select 
					row_number() over(order by reg_date desc) rnum, 
					r.* 
				from 
					review_board r)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('reviewNo')">
				where 
					review_no like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('reviewTitle')">
				where 
					review_title like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
				where 
					member_id like #{searchKeyword}
			</when>
			</choose>
	</select>

	<select id="searchReviewCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('reviewNo')">
			select 
				count(*) 
			from 
				review_board
			where 
				review_no like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('reviewTitle')">
			select 
				count(*) 
			from 
				review_board
			where 
				review_title like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
			select 
				count(*) 
			from 
				review_board
			where 
				member_id like #{searchKeyword}
		</if>
	</select>
	
	<select id="searchSharing" resultType="board">
			select 
				*
			from (
				select 
					row_number() over(order by reg_date desc) rnum, 
					t.* 
				from 
					ticket_sharing_board t)
			<choose>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('no')">
				where 
					no like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('title')">
				where 
					title like #{searchKeyword}
			</when>
			<when test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
				where 
					member_id like #{searchKeyword}
			</when>
			</choose>
	</select>

	<select id="searchSharingCount" resultType="int" parameterType="java.util.HashMap">
		<if test="searchType != null and !searchType.equals('') and searchType.equals('no')">
			select 
				count(*) 
			from 
				ticket_sharing_board
			where 
				no like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('title')">
			select 
				count(*) 
			from 
				ticket_sharing_board
			where 
				title like #{searchKeyword}
		</if>
		<if test="searchType != null and !searchType.equals('') and searchType.equals('memberId')">
			select 
				count(*) 
			from 
				ticket_sharing_board
			where 
				member_id like #{searchKeyword}
		</if>
	</select>
	
	<select id="adminManageRecentTenRegisterList" resultType="member">
		select 
			id, reg_date, image
		from 
			member
			<![CDATA[where rownum <= 10]]>
		order by 
			reg_date desc
	</select>
	
	<delete id="deleteGoodsLike">
		delete from
			goods_like
		where
			p_id = #{pId}
	</delete>
	
	<select id="selectOneGoodsOptionId" resultType="_int">
		select
			option_id
		from
			goods_option
		where
			p_id = #{pId}
	</select>
	
	<select id="selectGoodsOrderList" resultType="goodsOrder">
		select
			*
		from
			goods_order
		order by
			order_no desc
	</select>
	
	<select id="selectGoodsOrderTotalCount" resultType="_int">
		select 
			count(*) 
		from 
			goods_order
	</select>
	
	<resultMap type="member" id="memberMap2">
		<id column="id" property="id"/>
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<result column="gender" property="gender" />
		<result column="email" property="email" />
		<result column="birthday" property="birthday" />
		<result column="address" property="address" />
		<result column="nickname" property="nickname" />
		<result column="reg_date" property="regDate" />
		<result column="point" property="point" />
		<result column="enabled" property="enabled" />
		<result column="image" property="image" />
 	</resultMap>
	
	<resultMap type="GoodsPaymentJoin" id="GoodsPaymentJoinMap">
		<collection property="member" resultMap="memberMap2" />
		<collection property="payment" resultMap="paymentMap" />
	</resultMap>
	
	<select id="selectOnePayment" resultMap="GoodsPaymentJoinMap">
		select
			*
		from
			payment p
		right join member m
		on p.member_id = m.id
		where 
			m.id = #{memberId}
	</select>
	
	<resultMap type="GoodsOrderDetailJoin" id="goodsOrderDetailJoinMap">
		<collection property="goods" resultMap="goodsMap" />
		<collection property="optionDetail" resultMap="optionDetailMap" />
		<collection property="orderDetail" resultMap="orderDetailMap" />
	</resultMap>
	
	<select id="selectOneGoodsOrderDetail" resultMap="goodsOrderDetailJoinMap">
		select
			o.order_no, o.p_img, o.p_name, o.p_price, o.option_type, o.option_color, o.option_size, o.quantity
		from
			(select
			*
			from
			order_detail o
			left join goods g
			on o.p_id = g.p_id
			left join option_detail d
			on o.option_id = d.option_id
			) o
		where 
			o.order_no = #{orderNo}
	</select>
	
	<select id="selectOneGoodsOrderMember" resultType="string">
		select
			member_id
		from
			goods_order
		where
			order_no = #{orderNo}
	</select>
	
</mapper>