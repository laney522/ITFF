<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- #3. servlet-context 관련 설정 : mvc 관련 처리 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.spring" />
	
	<!-- #9. HandlerInterceptor 등록 -->
<!-- 	<interceptors>	
		<interceptor>
			/** : level 수 상관없이 모든 요청
			<mapping path="/**"/>
			<beans:bean class="com.kh.spring.common.interceptor.LogInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/board/boardForm.do"/>
			<mapping path="/member/**"/>
			<mapping path="/ws/stomp.do"/>
			<mapping path="/chat/chat.do"/>
			<mapping path="/admin/**"/>
			<exclude-mapping path="/member/memberLogin.do"/>
			<exclude-mapping path="/member/memberEnroll.do"/>
			<exclude-mapping path="/member/checkIdDuplicate*.do"/>
			<exclude-mapping path="/member/selectOneMember.do"/>
			<exclude-mapping path="/member/memberList.do"/>
			<exclude-mapping path="/member/one/**"/>
			<beans:bean class="com.kh.spring.common.interceptor.LoginInterceptor"/>		
		</interceptor>
	</interceptors> -->

	<!-- #12.1 파일업로드를 처리할 MultipartResolver 빈 등록 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- multipart요청당 최대파일크기 : 50mb(50 * 1024 * 1024) -->
		<beans:property name="maxUploadSize" value="52428800"/>
		<!-- 파일 하나당 최대크기 : 10mb(10 * 1024 * 1024) -->
		<beans:property name="maxUploadSizePerFile" value="10485760"/>
	</beans:bean>	
	
	<!-- #14.1 jsonView 빈 등록 -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView">
		<beans:property name="contentType" value="application/json; charset=utf-8"/>
	</beans:bean>
	
	<!-- #14.2 BeanNameViewResolver 등록 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/>   <!-- 우선순위가 제일 높다고 함(무슨말인지 모름) -->
	</beans:bean>
	
    <!-- 
    	#15.1 @Responsebody사용을 위한 의존 : 빈등록 (스프링 5.x => MappingJackson2HttpMessageConverter)
    	3.1 이후는 mvc:annotation-driven태그에서 아래 설정을 대신함. 그래서 그냥 주석해도 됨
    -->
	<!-- 
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
                <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean> 
	-->
	
	<!-- #16.2 핸들러 및 Endpoint 등록-->
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo"/>
		<websocket:sockjs />
	</websocket:handlers>
	<!-- stomp 관련 -->
	<websocket:message-broker application-destination-prefix="/app">
		<websocket:stomp-endpoint path="/stomp">
			<!-- HttpSession객체 접근을 위한 설정 -->
			<websocket:handshake-interceptors>
				<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>			
			</websocket:handshake-interceptors>
			<websocket:sockjs />
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic, /foo, /notice, /chat"/>
	</websocket:message-broker>
	
	<!-- 실시간 알람 -->
	<websocket:handlers>
	    <websocket:mapping handler="myWebSocketHandler" path="/echo-ws" />
	    <websocket:handshake-interceptors>
	        <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
	    </websocket:handshake-interceptors>	
	    <websocket:sockjs websocket-enabled="true" />
	</websocket:handlers>
	
	<beans:bean id="myWebSocketHandler" class="com.kh.spring.socket.MyWebSocketHandler"></beans:bean>
	
</beans:beans>
